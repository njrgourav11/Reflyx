{
  "name": "reflyx",
  "displayName": "Reflyx",
  "description": "Local AI-powered coding assistant with semantic search and code generation",
  "version": "1.0.4",
  "publisher": "GouravB",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Other",
    "Machine Learning",
    "Snippets",
    "Education"
  ],
  "keywords": [
    "ai",
    "assistant",
    "code",
    "search",
    "generation",
    "local",
    "offline"
  ],
  "activationEvents": [
    "onCommand:aiCodingAssistant.askCodebase",
    "onCommand:aiCodingAssistant.explainSelection",
    "onCommand:aiCodingAssistant.generateCode",
    "onCommand:aiCodingAssistant.findSimilar",
    "onCommand:aiCodingAssistant.refactorSuggestion",
    "onCommand:aiCodingAssistant.indexWorkspace",
    "onCommand:aiCodingAssistant.toggleChat",
    "onCommand:aiCodingAssistant.openSettings",
    "onCommand:aiCodingAssistant.switchMode",
    "onCommand:aiCodingAssistant.selectProvider",
    "onCommand:aiCodingAssistant.healthCheck",
    "onView:aiCodingAssistant.chatView",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiCodingAssistant.askCodebase",
        "title": "Ask Codebase",
        "category": "Reflyx",
        "icon": "$(search)"
      },
      {
        "command": "aiCodingAssistant.explainSelection",
        "title": "Explain Selection",
        "category": "Reflyx",
        "icon": "$(info)"
      },
      {
        "command": "aiCodingAssistant.generateCode",
        "title": "Generate Code",
        "category": "Reflyx",
        "icon": "$(add)"
      },
      {
        "command": "aiCodingAssistant.findSimilar",
        "title": "Find Similar Code",
        "category": "Reflyx",
        "icon": "$(references)"
      },
      {
        "command": "aiCodingAssistant.refactorSuggestion",
        "title": "Refactor Suggestion",
        "category": "Reflyx",
        "icon": "$(lightbulb)"
      },
      {
        "command": "aiCodingAssistant.indexWorkspace",
        "title": "Index Workspace",
        "category": "Reflyx",
        "icon": "$(database)"
      },
      {
        "command": "aiCodingAssistant.toggleChat",
        "title": "Toggle Chat Panel",
        "category": "Reflyx",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "aiCodingAssistant.openSettings",
        "title": "Open Settings",
        "category": "Reflyx",
        "icon": "$(settings-gear)"
      },
      {
        "command": "aiCodingAssistant.switchMode",
        "title": "Switch AI Mode",
        "category": "Reflyx",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "aiCodingAssistant.selectProvider",
        "title": "Select AI Provider",
        "category": "Reflyx",
        "icon": "$(server-environment)"
      },
      {
        "command": "aiCodingAssistant.healthCheck",
        "title": "Check Server Health",
        "category": "Reflyx",
        "icon": "$(pulse)"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "aiCodingAssistant.explainSelection",
          "when": "editorHasSelection",
          "group": "aiAssistant@1"
        },
        {
          "command": "aiCodingAssistant.findSimilar",
          "when": "editorHasSelection",
          "group": "aiAssistant@2"
        },
        {
          "command": "aiCodingAssistant.refactorSuggestion",
          "when": "editorHasSelection",
          "group": "aiAssistant@3"
        }
      ],
      "commandPalette": [
        {
          "command": "aiCodingAssistant.explainSelection",
          "when": "editorHasSelection"
        },
        {
          "command": "aiCodingAssistant.findSimilar",
          "when": "editorHasSelection"
        },
        {
          "command": "aiCodingAssistant.refactorSuggestion",
          "when": "editorHasSelection"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "aiCodingAssistantContainer",
          "title": "Reflyx",
          "icon": "media/icon-activitybar.svg"
        }
      ]
    },
    "views": {
      "explorer": [],
      "aiCodingAssistantContainer": [
        {
          "id": "aiCodingAssistant.chatView",
          "name": "Chat"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "aiCodingAssistant.chatView",
        "when": "aiCodingAssistant.indexed != true",
        "contents": "Welcome to Reflyx!\n\n[Index Workspace](command:aiCodingAssistant.indexWorkspace)\n\nStart by indexing your workspace to enable semantic search and AI assistance."
      }
    ],
    "configuration": {
      "title": "Reflyx",
      "properties": {
        "aiCodingAssistant.serverUrl": {
          "type": "string",
          "default": "http://localhost:8000",
          "description": "URL of the AI Coding Assistant backend server"
        },
        "aiCodingAssistant.aiMode": {
          "type": "string",
          "enum": [
            "local",
            "online",
            "hybrid"
          ],
          "default": "local",
          "description": "AI processing mode: local (private), online (cloud APIs), or hybrid (local with cloud fallback)"
        },
        "aiCodingAssistant.preferredProvider": {
          "type": "string",
          "enum": [
            "ollama",
            "openai",
            "anthropic",
            "google",
            "groq",
            "together"
          ],
          "default": "ollama",
          "description": "Preferred AI provider"
        },
        "aiCodingAssistant.fallbackProvider": {
          "type": "string",
          "enum": [
            "",
            "ollama",
            "openai",
            "anthropic",
            "google",
            "groq",
            "together"
          ],
          "default": "",
          "description": "Fallback AI provider (optional)"
        },
        "aiCodingAssistant.selectedModel": {
          "type": "string",
          "default": "",
          "description": "Specific model to use (leave empty for auto-selection)"
        },
        "aiCodingAssistant.embeddingModel": {
          "type": "string",
          "default": "all-MiniLM-L6-v2",
          "description": "Embedding model for semantic search"
        },
        "aiCodingAssistant.maxChunkSize": {
          "type": "number",
          "default": 500,
          "minimum": 100,
          "maximum": 2000,
          "description": "Maximum size of code chunks for indexing"
        },
        "aiCodingAssistant.retrievalCount": {
          "type": "number",
          "default": 10,
          "minimum": 3,
          "maximum": 20,
          "description": "Number of code chunks to retrieve for context"
        },
        "aiCodingAssistant.similarityThreshold": {
          "type": "number",
          "default": 0.7,
          "minimum": 0,
          "maximum": 1,
          "description": "Minimum similarity threshold for search results"
        },
        "aiCodingAssistant.ignorePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "node_modules/**",
            ".git/**",
            "*.min.js",
            "dist/**",
            "build/**",
            "venv/**",
            "__pycache__/**",
            "*.pyc",
            ".pytest_cache/**",
            "coverage/**",
            ".coverage",
            "*.log",
            "logs/**"
          ],
          "description": "File patterns to ignore during indexing"
        },
        "aiCodingAssistant.autoIndex": {
          "type": "boolean",
          "default": true,
          "description": "Automatically index files when they change"
        },
        "aiCodingAssistant.showInlineExplanations": {
          "type": "boolean",
          "default": true,
          "description": "Show inline code explanations on hover"
        },
        "aiCodingAssistant.enableCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Enable CodeLens for AI actions"
        },
        "aiCodingAssistant.logLevel": {
          "type": "string",
          "enum": [
            "error",
            "warn",
            "info",
            "debug"
          ],
          "default": "info",
          "description": "Logging level for the extension"
        }
      }
    },
    "keybindings": [
      {
        "command": "aiCodingAssistant.askCodebase",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a"
      },
      {
        "command": "aiCodingAssistant.explainSelection",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorHasSelection"
      },
      {
        "command": "aiCodingAssistant.generateCode",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      },
      {
        "command": "aiCodingAssistant.toggleChat",
        "key": "ctrl+shift+c",
        "mac": "cmd+shift+c"
      },
      {
        "command": "aiCodingAssistant.openSettings",
        "key": "ctrl+shift+,",
        "mac": "cmd+shift+,"
      },
      {
        "command": "aiCodingAssistant.switchMode",
        "key": "ctrl+shift+m",
        "mac": "cmd+shift+m"
      }
    ]
  },
  "scripts": {
    "bundle": "esbuild src/extension.ts --bundle --platform=node --external:vscode --outfile=out/extension.js --format=cjs",
    "vscode:prepublish": "npm run compile",
    "compile": "npm run bundle",
    "watch": "esbuild src/extension.ts --bundle --platform=node --external:vscode --outfile=out/extension.js --format=cjs --watch",
    "pretest": "npm run compile",
    "lint": "echo 'Linting skipped for now'",
    "test": "echo 'Tests skipped for now'",
    "package": "vsce package",
    "deploy": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.15.0",
    "esbuild": "^0.25.9",
    "eslint": "^8.57.1",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "@types/node-fetch": "^2.6.13",
    "axios": "^1.6.0",
    "highlight.js": "^11.9.0",
    "marked": "^9.1.0",
    "node-fetch": "^3.3.2",
    "ws": "^8.14.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/njrgourav11/Reflyx.git"
  },
  "bugs": {
    "url": "https://github.com/njrgourav11/Reflyx/issues"
  },
  "homepage": "https://github.com/njrgourav11/Reflyx#readme",
  "license": "MIT"
}
